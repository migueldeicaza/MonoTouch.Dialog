<Type Name="ImageLoader" FullName="MonoTouch.Dialog.Utilities.ImageLoader">
  <TypeSignature Language="C#" Value="public class ImageLoader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ImageLoader extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.Dialog-1</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Network image loader, with local file system cache and in-memory cache
            </summary>
    <remarks>
            By default, using the static public methods will use an in-memory cache
            for 50 images and 4 megs total.   The behavior of the static methods
            can be modified by setting the public DefaultLoader property to a value
            that the user configured.
            The instance methods can be used to create different imageloader with
            different properties.
            Keep in mind that the phone does not have a lot of memory, and using
            the cache with the unlimited value (0) even with a number of items in
            the cache can consume memory very quickly.
            Use the Purge method to release all the memory kept in the caches on
            low memory conditions, or when the application is sent to the background.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageLoader (int cacheSize, int memoryLimit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 cacheSize, int32 memoryLimit) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheSize" Type="System.Int32" />
        <Parameter Name="memoryLimit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cacheSize">
            The maximum number of entries in the LRU cache
            </param>
        <param name="memoryLimit">
            The maximum number of bytes to consume by the image loader cache.
            </param>
        <summary>
            Creates a new instance of the image loader
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseDir">
      <MemberSignature Language="C#" Value="public static readonly string BaseDir;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string BaseDir" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultLoader">
      <MemberSignature Language="C#" Value="public static MonoTouch.Dialog.Utilities.ImageLoader DefaultLoader;" />
      <MemberSignature Language="ILAsm" Value=".field public static class MonoTouch.Dialog.Utilities.ImageLoader DefaultLoader" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.Dialog.Utilities.ImageLoader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This contains the default loader which is configured to be 50 images
            up to 4 megs of memory.   Assigning to this property a new value will
            change the behavior.   This property is lazyly computed, the first time
            an image is requested.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRequestImage">
      <MemberSignature Language="C#" Value="public static MonoTouch.UIKit.UIImage DefaultRequestImage (Uri uri, MonoTouch.Dialog.Utilities.IImageUpdated notify);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class MonoTouch.UIKit.UIImage DefaultRequestImage(class System.Uri uri, class MonoTouch.Dialog.Utilities.IImageUpdated notify) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="notify" Type="MonoTouch.Dialog.Utilities.IImageUpdated" />
      </Parameters>
      <Docs>
        <param name="uri">
            The URI for the image to load
            </param>
        <param name="notify">
            A class implementing the IImageUpdated interface that will be invoked when the image has been loaded
            </param>
        <summary>
            Requests an image to be loaded using the default image loader
            </summary>
        <returns>
            If the image has already been downloaded, or is in the cache, this will return the image as a UIImage.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="public static void Purge ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Purge() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Purges the contents of the DefaultLoader
            </summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="PurgeCache">
      <MemberSignature Language="C#" Value="public void PurgeCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PurgeCache() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Purges the cache of this instance of the ImageLoader, releasing
            all the memory used by the images in the caches.
            </summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestImage">
      <MemberSignature Language="C#" Value="public MonoTouch.UIKit.UIImage RequestImage (Uri uri, MonoTouch.Dialog.Utilities.IImageUpdated notify);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class MonoTouch.UIKit.UIImage RequestImage(class System.Uri uri, class MonoTouch.Dialog.Utilities.IImageUpdated notify) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIImage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="notify" Type="MonoTouch.Dialog.Utilities.IImageUpdated" />
      </Parameters>
      <Docs>
        <param name="uri">
            The URI for the image to load
            </param>
        <param name="notify">
            A class implementing the IImageUpdated interface that will be invoked when the image has been loaded
            </param>
        <summary>
            Requests an image to be loaded from the network
            </summary>
        <returns>
            If the image has already been downloaded, or is in the cache, this will return the image as a UIImage.
            </returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
