<Type Name="EntryAttribute" FullName="MonoTouch.Dialog.EntryAttribute">
  <TypeSignature Language="C#" Value="public class EntryAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntryAttribute extends System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>MonoTouch.Dialog-1</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.All, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Apply this attribute to strings to produce an editing row.</summary>
    <remarks>
      <para>
	You can specify the kind of UIKeyboardType for data entry by setting KeyboardType property.
      </para>
	  <example>
	    <code lang="c#">
class Login {
	[Entry ("Enter your name")]
	string Name; 

	[Entry ("Enter your password")]
	[Password]
	string Password;

	[Entry (Placeholder="Your numeric Pin", KeyboardType=UIKeyboardType.NumberPad]
	string Pin;
}
	    </code>
	  </example>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Public constructor</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntryAttribute (string placeholder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string placeholder) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="placeholder" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="placeholder">String to be displayed if the value of the string is null or empty.</param>
        <summary>Public constructor</summary>
        <remarks>
	  <example>
	    <code lang="c#">
class Login {
	[Entry ("Enter your name")]
	string Name; 

	[Entry ("Enter your password")]
	[Password]
	string Password;
}
	    </code>
	  </example>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardType">
      <MemberSignature Language="C#" Value="public MonoTouch.UIKit.UIKeyboardType KeyboardType;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype MonoTouch.UIKit.UIKeyboardType KeyboardType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>MonoTouch.UIKit.UIKeyboardType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies the kind of keyboard type to use for the data entry</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Placeholder">
      <MemberSignature Language="C#" Value="public string Placeholder;" />
      <MemberSignature Language="ILAsm" Value=".field public string Placeholder" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The placeholder to display if the input string is empty</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
